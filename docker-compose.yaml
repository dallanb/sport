version: "3.2"

services:
  adminer:
    container_name: adminer
    build:
      context: ${HUNCHO_DIR}/services/adminer
      dockerfile: ${HUNCHO_DIR}/services/adminer/build/Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - app-net
  sport:
    container_name: sport
    build:
      context: .
      dockerfile: ./build/Dockerfile
    restart: on-failure
    volumes:
      - ${HUNCHO_DIR}/services/sport/migrations:/home/app/migrations
      - ${HUNCHO_DIR}/services/sport/bin:/home/app/bin
      - ${HUNCHO_DIR}/services/sport/tests:/home/app/tests
      - ${HUNCHO_DIR}/services/sport/seeds:/home/app/seeds
      - ${HUNCHO_DIR}/services/sport/src:/home/app/src
      - ${HUNCHO_DIR}/services/sport/statics:/home/app/statics
      - ${HUNCHO_DIR}/services/sport/manage.py:/home/app/manage.py
      - ${HUNCHO_DIR}/services/sport/setup.py:/home/app/setup.py
    env_file:
      - ${HUNCHO_DIR}/env/dev/.env.sport
    healthcheck:
      test: curl --fail -s sport:5000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 20006:5000
    depends_on:
      - sport_db
    networks:
      - app-net
  sport_db:
    container_name: sport_db
    image: postgres:9.6
    volumes:
      - ${HUNCHO_DIR}/data/dev/sport_db/data:/var/lib/postgresql/data/
    env_file:
      - ${HUNCHO_DIR}/env/dev/.env.sport_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sport"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app-net
networks:
  app-net:
    driver: bridge